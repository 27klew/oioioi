from oioioi.default_settings import *
import os.path

# This should match INSTALLATION_CONFIG_VERSION in
# "oioioi/default_settings.py".
# Before you adjust it, you may consider visiting
# "https://github.com/sio2project/oioioi/#changes-in-the-deployment-directory".
CONFIG_VERSION = __CONFIG_VERSION__

# Enable debugging features.
#
# SET DEBUG = False FOR PRODUCTION DEPLOYMENT.
DEBUG = True

TEMPLATE_DEBUG = DEBUG

# Site name displayed in the title
SITE_NAME = 'OIOIOI'

# Email addresses to send error message reports.
ADMINS = (
    ('Your Name', 'youremail@example.com'),
)

# Sender email address for messages sent by OIOIOI to users.
DEFAULT_FROM_EMAIL = 'webmaster@localhost'
DEFAULT_FROM_ADDRESS = DEFAULT_FROM_EMAIL

# Sender email address for error messages sent to admins.
SERVER_EMAIL = DEFAULT_FROM_EMAIL


# Email addresses to send communication from users (for example requests for
# teacher accounts).
MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
        'ATOMIC_REQUESTS': True,         # Don't touch unless you know what you're doing.
    }
}

# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
ALLOWED_HOSTS = []

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = '__TIMEZONE__'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en'

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = '__DIR__/media'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = '__DIR__/static'

# Make this unique, and don't share it with anybody.
SECRET_KEY = '__SECRET__'

# Uncomment once oisubmit is used.
#OISUBMIT_MAGICKEY = '__OTHER_SECRET__'

# SMTP server parameters for sending emails.
EMAIL_SUBJECT_PREFIX = '[OIOIOI] '
EMAIL_USE_TLS = False
EMAIL_HOST = 'mail'
EMAIL_PORT = 25
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''

# Comment to send user activation emails. Needs an SMTP server to be
# configured above.
SEND_USER_ACTIVATION_EMAIL = False

# RabbitMQ server URL for distributed workers.
#
# Uncomment once RabbitMQ is installed. By default SQLAlchemy is used,
# but this is unreliable and not intended for production.
#BROKER_URL = 'amqp://guest:guest@localhost:5672//'

# Filetracker server settings.
#
# Uncomment the following lines to enable remote access to Filetracker. This is
# needed if you install separate judging machines. Beware -- there is no
# authorization mechanism in Filetracker. Everyone who can access the server on
# the given port will be able to see all the files. It's recommended to have
# the judging machines on a separate physical network and listen only on the
# corresponding IP address.
#FILETRACKER_SERVER_ENABLED = True
#FILETRACKER_LISTEN_ADDR = '0.0.0.0'
#FILETRACKER_LISTEN_PORT = 9999

# Similarly comment this out to disable workers running on the server machine.
RUN_LOCAL_WORKERS = True

# Comment out the following options after you have downloaded the sandboxes
# with
#
#   manage.py download_sandboxes
#
# Before this only system compilers can be used and the safe execution
# supervisor is not available.
USE_UNSAFE_EXEC = True
USE_LOCAL_COMPILERS = True

# When USE_SINOLPACK_MAKEFILES equals True, the sinolpack upload workflow uses
# standard sinolpack makefiles, whose behaviour may be modified by a custom
# makefile.user file from a package. The makefiles' execution is not sandboxed,
# hence it should be disabled for untrusted contest admins.
# Whet it equals False, the upload workflow uses sioworkers for programs'
# execution (in a sandboxed environment, if USE_UNSAFE_EXEC is set to False).
USE_SINOLPACK_MAKEFILES = False

# Uncomment and edit this line to limit availability of programming languages.
#SUBMITTABLE_EXTENSIONS = {'C': ['c'], 'C++': ['cpp', 'cc'], 'Pascal': ['pas']}

# Controls if uwsgi in default configuration shall use gevent loop.
# To use it, you have to install gevent - please consult
# https://github.com/surfly/gevent
# This is recommended for heavy load, but you may still need to tune uwsgi
# options in deployment/supervisord.conf
UWSGI_USE_GEVENT = False

# EXTRA MODULES
#
# Comment/uncomment components to disable/enable them.
#
# Additional components usually have to be prepended to the list in
# INSTALLED_APPS, because they may want to override some templates. But this is
# not always the case. Please consult the documentation of particular extension
# you're configuring.
#
# Some components need also corresponding lines in TEMPLATE_CONTEXT_PROCESSORS
# and/or AUTHENTICATION_BACKENDS commented/uncommented.

INSTALLED_APPS = (
#    'oioioi.contestlogo',
#    'oioioi.avatar',
#    'oioioi.teachers',
#    'oioioi.ipdnsauth',
#    'oioioi.sio1sync',
#    'oioioi.participants',
#    'oioioi.oi',
#    'oioioi.contestexcl',
#    'oioioi.oisubmit',
#    'oioioi.zeus',
#    'oioioi.testrun',
#    'oioioi.spliteval',
#    'oioioi.printing',
#    'oioioi.scoresreveal',
#    'oioioi.oireports',
#    'oioioi.ontak',
#    'oioioi.complaints',
#    'oioioi.confirmations',
#    'oioioi.acm',
#    'oioioi.forum',
#    'oioioi.disqualification',
#    'oioioi.sharingcli',
#    'oioioi.ctimes',
#    'oioioi.suspendjudge',
#    'oioioi.submitsqueue',
#    'oioioi.submitservice',
#    'oioioi.timeline',
#    'oioioi.amppz',
#    'oioioi.balloons',
#    'oioioi.statistics',
#    'oioioi.publicsolutions',
#    'oioioi.testspackages',
#    'oioioi.pa',
#    'oioioi.notifications',
#    'oioioi.prizes',
#    'oioioi.mailsubmit',
#    'oioioi.portals',
) + INSTALLED_APPS

# Set to True to show the link to the problemset with contests on navbar.
PROBLEMSET_LINK_VISIBLE = True

TEMPLATE_CONTEXT_PROCESSORS += (
#    'oioioi.contestlogo.processors.logo_processor',
#    'oioioi.contestlogo.processors.icon_processor',
#    'oioioi.avatar.processors.gravatar',
#    'oioioi.notifications.processors.notification_processor',
)

MIDDLEWARE_CLASSES += (
#    'oioioi.ipdnsauth.middleware.IpDnsAuthMiddleware',
#    'oioioi.contestexcl.middleware.ExclusiveContestsMiddleware',
#    'oioioi.ipdnsauth.middleware.ForceDnsIpAuthMiddleware',
)

AUTHENTICATION_BACKENDS += (
#    'oioioi.teachers.auth.TeacherAuthBackend',
#    'oioioi.ipdnsauth.backends.IpDnsBackend',
)

# Number of concurrently evaluated submissions (default is 1).
#EVALMGR_CONCURRENCY = 30

# Number of concurrently processed problem packages (default is 1).
#UNPACKMGR_CONCURRENCY = 1

# Uncomment the following lines to enable judging prioritisation.
# Workers serving both high- and low-priority tasks should be started with
# '-Q sioworkers,sioworkers-lowprio' commandline option.
#ENABLE_SPLITEVAL = True
#SPLITEVAL_EVALMGR = True

PROBLEM_SOURCES += (
#    'oioioi.sharingcli.problem_sources.RemoteSource',
#    'oioioi.zeus.problem_sources.ZeusProblemSource',
)

SHARING_SERVERS = (
#    ('site_url', 'sharing_url', 'client_id', 'client_secret'),
)

ZEUS_INSTANCES = {
#    'zeus_id': ('zeus_url', 'zeus_login', 'zeus_secret'),
}

# Complaints
#COMPLAINTS_EMAIL = 'email_to_send_complaints_to'
#COMPLAINTS_SUBJECT_PREFIX = '[oioioi-complaints] '

# Filelock
# Absolute path to the directory where files used for process synchronization
# will be placed.
#FILELOCK_BASEDIR = os.path.join(tempfile.gettempdir(), 'oioioi-filelocks')

# Cache
# To use the more efficient memcached, install it and uncomment the following:
#CACHES = {
#    'default': {
#        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#        'LOCATION': '127.0.0.1:11211',
#    }
#}

# Notifications configuration (client)
# This one is for JavaScript socket.io client.
# It should contain actual URL available from remote machines.
#NOTIFICATIONS_SERVER_URL = 'http://localhost:7887/'

# Notifications configuration (server)
#NOTIFICATIONS_SERVER_ENABLED = True

# URL connection string to a Notifications Server instance
#NOTIFICATIONS_OIOIOI_URL = 'http://localhost:8000/'

# URL connection string for RabbitMQ instance used by Notifications Server
#NOTIFICATIONS_RABBITMQ_URL = 'amqp://localhost'

# Port that the Notifications Server listens on
#NOTIFICATIONS_SERVER_PORT = 7887

